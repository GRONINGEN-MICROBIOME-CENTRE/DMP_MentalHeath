#pathway summary stats
#start interactive session on the cluster:  srun --cpus-per-task=1 --mem=20gb --nodes=1 --qos=interactive --time=04:00:00 --pty bash -i
#load R module:                             ml RPlus
#start R (R version 4.0.3 (2020-10-10):     R

library(tidyverse)

        ## =============== 0. LOAD AND FORMAT DATA   ================ ##

phenotypes = read.csv("27.08.2021_transformed_phenotypes_control.csv", header=T, as.is=T, sep=",", row.names = 1)
dim(phenotypes)
# 7656  236

#metacyc file (created by DAG3 group)
pathways <- read.csv(file.path("/groups/umcg-lifelines/tmp01/projects/dag3_fecal_mgs/umcg-rgacesa/DAG3_data_ready/DAG3_biobakery_v3_humann/DAG3_humann3_headersfixed_transposed_cleaned_normalized_v2.csv"), header = T, stringsAsFactors = F)
dim(pathways)
#8601  607

#make ID rownames and remove ID from pathway dataframe
rownames(pathways) <- pathways[,607]
pathways <- pathways[,-607]
#8601  606

#intersect pathway data with phenotype data
samples = intersect(rownames(pathways), phenotypes$DAG3_sampleID)
length(samples)
#7632 (indicating we have missing pwy data for 24 of the 7656 participants of this study)

pathways = pathways[samples,]
dim(pathways)
#7632 606

        ## =============== 2. MAKE DATA FRAMES FOR SUMMARY STATISTICS   ================ ##

        #1. control
controls <- phenotypes %>% filter (
        MDD_control == "control")
#5522  236

samples = intersect(rownames(pathways), controls$DAG3_sampleID)
length(samples)
#5503

pathways_controls = pathways[samples,]
dim(pathways_controls)
# 5503  606

        #2. AnyDep
AnyDep <- phenotypes %>% filter (
        AnyDep_control == "any_current_dep")
#226  236

samples = intersect(rownames(pathways), AnyDep$DAG3_sampleID)
length(samples)
#225

pathways_AnyDep = pathways[samples,]
dim(pathways_AnyDep)
#225  606

        #3. DYS
DYS <- phenotypes %>% filter (
        DYS_control == "current_DYS")
#70  236

samples = intersect(rownames(pathways), DYS$DAG3_sampleID)
length(samples)
#70

pathways_DYS = pathways[samples,]
dim(pathways_DYS)
#70  606

        #4. MDD
MDD <- phenotypes %>% filter (
        MDD_control == "current_MDD")
#156  236

samples = intersect(rownames(pathways), MDD$DAG3_sampleID)
length(samples)
#155

pathways_MDD = pathways[samples,]
dim(pathways_MDD)
#155  606

        #5. LTMDD
LTMDD <- phenotypes %>% filter (
        LTMDDonly_control == "lifetime_MDD_only")
#749  236

samples = intersect(rownames(pathways), LTMDD$DAG3_sampleID)
length(samples)
#749

pathways_LTMDD = pathways[samples,]
dim(pathways_LTMDD)
#749  606

        #6. AnyAnx
AnyAnx <- phenotypes %>% filter (
        AnyAnx_control == "any_current_anx")
#385  614

samples = intersect(rownames(pathways), AnyAnx$DAG3_sampleID)
length(samples)
#384

pathways_AnyAnx = pathways[samples,]
dim(pathways_AnyAnx)
#384  606

        #7. GAD
GAD <- phenotypes %>% filter (
        GAD_control == "current_GAD")
#339  236

samples = intersect(rownames(pathways), GAD$DAG3_sampleID)
length(samples)
#338

pathways_GAD = pathways[samples,]
dim(pathways_GAD)
#338  606

        #8. LTGAD
LTGAD <- phenotypes %>% filter (
        LTGADonly_control == "lifetime_GAD_only")
#243  236

samples = intersect(rownames(pathways), LTGAD$DAG3_sampleID)
length(samples)
#243

pathways_LTGAD = pathways[samples,]
dim(pathways_LTGAD)
#243  606

                ## =============== 3. PATHWAY SUMMARY STATISTICS   ================ ##

#calculate summary stats for:

        #a. entire population
new_df <- as.data.frame(t(pathways))
#606 7632
summary_stats_population <- data.frame(population_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_population$population_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
population_presence <- new_df
population_presence[new_df>0] <- 1
summary_stats_population$population_presence <- apply(population_presence, 1, function(x) {sum(x)})
summary_stats_population$pwy <- rownames(summary_stats_population) #for merging with other data frames

        #1. control
new_df <- as.data.frame(t(pathways_controls))
#606 5503
summary_stats_control <- data.frame(control_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_control$control_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
control_presence <- new_df
control_presence[new_df>0] <- 1
summary_stats_control$control_presence <- apply(control_presence, 1, function(x) {sum(x)})
summary_stats_control$pwy <- rownames(summary_stats_control) 
        
        #2. AnyDep
new_df <- as.data.frame(t(pathways_AnyDep))
summary_stats_anydep <- data.frame(anydep_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_anydep$anydep_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
anydep_presence <- new_df
anydep_presence[new_df>0] <- 1
summary_stats_anydep$anydep_presence <- apply(anydep_presence, 1, function(x) {sum(x)})
summary_stats_anydep$pwy <- rownames(summary_stats_anydep) 

        #3. DYS
new_df <- as.data.frame(t(pathways_DYS))
summary_stats_dys <- data.frame(dys_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_dys$dys_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
dys_presence <- new_df
dys_presence[new_df>0] <- 1
summary_stats_dys$dys_presence <- apply(dys_presence, 1, function(x) {sum(x)})
summary_stats_dys$pwy <- rownames(summary_stats_dys) 

        #4. MDD
new_df <- as.data.frame(t(pathways_MDD))
summary_stats_mdd <- data.frame(mdd_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_mdd$mdd_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
mdd_presence <- new_df
mdd_presence[new_df>0] <- 1
summary_stats_mdd$mdd_presence <- apply(mdd_presence, 1, function(x) {sum(x)})
summary_stats_mdd$pwy <- rownames(summary_stats_mdd) 

        #5. LTMDD
new_df <- as.data.frame(t(pathways_LTMDD))
summary_stats_ltmdd <- data.frame(ltmdd_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_ltmdd$ltmdd_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
ltmdd_presence <- new_df
ltmdd_presence[new_df>0] <- 1
summary_stats_ltmdd$ltmdd_presence <- apply(ltmdd_presence, 1, function(x) {sum(x)})
summary_stats_ltmdd$pwy <- rownames(summary_stats_ltmdd) 

        #6. AnyAnx
new_df <- as.data.frame(t(pathways_AnyAnx))
summary_stats_anyanx <- data.frame(anyanx_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_anyanx$anyanx_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
anyanx_presence <- new_df
anyanx_presence[new_df>0] <- 1
summary_stats_anyanx$anyanx_presence <- apply(anyanx_presence, 1, function(x) {sum(x)})
summary_stats_anyanx$pwy <- rownames(summary_stats_anyanx) 

        #7. GAD
new_df <- as.data.frame(t(pathways_GAD))
summary_stats_gad <- data.frame(gad_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_gad$gad_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
gad_presence <- new_df
gad_presence[new_df>0] <- 1
summary_stats_gad$gad_presence <- apply(gad_presence, 1, function(x) {sum(x)})
summary_stats_gad$pwy <- rownames(summary_stats_gad) 

        #8. LTGAD
new_df <- as.data.frame(t(pathways_LTGAD))
summary_stats_ltgad <- data.frame(ltgad_mean = apply(new_df, 1, function(x) {mean(x)}))
summary_stats_ltgad$ltgad_sd <- apply(new_df, 1, function(x) {sd(x)})

#to obtain presence we need to change values > 0 to 1, and then sum each row
ltgad_presence <- new_df
ltgad_presence[new_df>0] <- 1
summary_stats_ltgad$ltgad_presence <- apply(ltgad_presence, 1, function(x) {sum(x)})
summary_stats_ltgad$pwy <- rownames(summary_stats_ltgad) 

        #9. MERGE population, control and disorder summary stats by pwy
summary_stats_pwy <- list(summary_stats_population, summary_stats_control, 
                           summary_stats_anydep, summary_stats_dys, summary_stats_mdd, summary_stats_ltmdd,
                           summary_stats_anyanx, summary_stats_gad, summary_stats_ltgad)
summary_stats_pwy <- summary_stats_pwy %>% reduce(full_join, by= "pwy")
colnames(summary_stats_pwy)

#reorder
summary_stats_pwy <- as.data.frame(summary_stats_pwy[,c(4, 1:3, 5:28)])
#606   28

#write table
write.table(summary_stats_pwy, "summary_stats_pwy_by_disorder.txt")
write.csv(summary_stats_pwy, "summary_stats_pwy_by_disorder.csv")
